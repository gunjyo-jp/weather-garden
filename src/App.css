/* アプリケーション全体のコンテナ */
.app-container {
  position: relative;
  width: 100vw;
  height: 100vh;
  background-size: cover;
  background-position: center;
  overflow: hidden;
  /* この要素がコンテナであることを宣言 */
  container-type: inline-size; 
}

/* 庭エリア（地面） */
.garden {
  position: absolute;
  bottom: 1%;
  left: 0;
  width: 100%;
  height: 20%;
}

/* 空中エリア */
.sky {
  position: absolute;
  top: 10%;
  left: 0;
  width: 100%;
  height: 50%;
}

/* キャラクターのスタイル */
.character {
  position: absolute;
  width: 10vw;
  max-width: 9.375rem; /* 150px -> 9.375rem */
  height: auto;
}

/* 天気情報のエリア */
.weather-info {
  position: absolute;
  top: 2vw;
  left: 2vw;
  padding: 1.5vw;
  background-color: rgba(255, 255, 255, 0.7);
  border-radius: 1vw;
  box-shadow: 0 0.2vw 0.5vw rgba(0, 0, 0, 0.2);
  font-family: sans-serif;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 2vw;
}

.current-weather {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5vw;
}

.weather-icon-display {
  width: 5vw;
  height: auto;
  border-radius: 0.8vw;
  max-width: 9rem; /* 200px -> 12.5rem */
}

.location {
  font-size: clamp(1.125rem, 2.5vw, 1.875rem); /* pxをremに */
  font-weight: bold;
}

.forecast-container {
  display: flex;
  gap: 1.5vw;
  border-left: 1px solid rgba(0, 0, 0, 0.2);
  padding-left: 2vw;
}

.forecast-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5vw;
  font-size: clamp(1rem, 2vw, 1.5rem); /* pxをremに */
  font-weight: bold;
}

.forecast-item img {
  width: 5vw;
  height: auto;
  border-radius: 0.8vw;
  max-width: 7rem; /* 150px -> 9.375rem */
}

/* コンテナクエリによるスタイル変更 */
@container (width < 43.75rem) { /* 700px -> 43.75rem */
  .weather-info {
    flex-direction: column;
    gap: 1.5vw;
    align-items: flex-start;
  }

  .forecast-container {
    border-left: none;
    padding-left: 0;
    width: 100%;
    justify-content: space-between;
  }
}

/* メニュー関連のスタイル */
.menu-container {
  position: absolute;
  top: 2vw;
  right: 2vw;
  z-index: 10;
}

.menu-button {
  width: 10vw;
  max-width: 10rem; /* 50px -> 3.125rem */
  min-width: 9rem; /* 35px -> 2.1875rem */
  height: auto;
  aspect-ratio: 5 / 4;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  cursor: pointer;
  background-color: rgba(255, 255, 255, 0.7);
  padding: 0.7vw;
  border-radius: 0.8vw;
  box-shadow: 0 0.2vw 0.5vw rgba(0, 0, 0, 0.2);
}

.menu-bar-line {
  width: 100%;
  height: 0.4vw;
  max-height: 0.25rem; /* 4px -> 0.25rem */
  background-color: #333;
  border-radius: 0.2vw;
}

.menu-bar {
  position: absolute;
  top: 6.5vw;
  right: 0;
  background-color: rgba(255, 255, 255, 0.9);
  border-radius: 0.8vw;
  box-shadow: 0 0.4vw 0.8vw rgba(0, 0, 0, 0.2);
  width: 45vw;
  max-width: 12.5rem; /* 150px -> 9.375rem */
  min-width: 7.5rem; /* 120px -> 7.5rem */
  padding: 1vw 0;
  animation: fadeIn 0.2s ease-out;
}

.menu-item {
  padding: 1.2vw 2vw;
  cursor: pointer;
  font-family: sans-serif;
  font-size: clamp(0.875rem, 1.6vw, 1.5rem); /* pxをremに */
  text-align: center;
}

.menu-item:hover {
  background-color: rgba(0, 0, 0, 0.1);
}

/* フェードインアニメーションの定義 */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-0.625rem); /* 10px -> 0.625rem */
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* モーダル（ゲット画面）関連のスタイル */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.6);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  animation: fadeIn 0.3s;
}

.modal-content {
  background-color: white;
  padding: 3vw 4vw;
  border-radius: 1.5vw;
  text-align: center;
  box-shadow: 0 0.5vw 1.5vw rgba(0, 0, 0, 0.3);
  animation: slideIn 0.3s ease-out;
  width: 80vw;
  max-width: 25rem; /* 400px -> 25rem */
}

.modal-content h2 {
  margin-top: 0;
  margin-bottom: 2vw;
  color: #333;
  font-size: clamp(1.25rem, 3vw, 1.75rem); /* pxをremに */
}

.captured-character-image {
  width: 20vw;
  height: 20vw;
  max-width: 12.5rem; /* 200px -> 12.5rem */
  max-height: 12.5rem; /* 200px -> 12.5rem */
  object-fit: contain;
  margin-bottom: 2vw;
}

.modal-content p {
  font-size: clamp(1.125rem, 2.2vw, 1.5rem); /* pxをremに */
  font-weight: bold;
  margin-top: 2.5vw;
  margin-bottom: 2.5vw;
}

.modal-content button {
  padding: 1.2vw 2.5vw;
  font-size: clamp(0.875rem, 1.6vw, 1.125rem); /* pxをremに */
  border: none;
  border-radius: 0.5vw;
  background-color: #007bff;
  color: white;
  cursor: pointer;
  transition: background-color 0.2s;
}

.modal-content button:hover {
  background-color: #0056b3;
}

.menu-modal-content {
  font-size: clamp(0.875rem, 1.6vw, 1.125rem); /* pxをremに */
  min-width: 30vw;
  max-width: 31.25rem; /* 500px -> 31.25rem */
  line-height: 1.7;
  text-align: left;
}

/* 天気メニューモーダルの詳細スタイル */
.weather-forecast-details {
  display: flex;
  flex-direction: column;
  gap: 1.5vw;
  min-width: 1vw;
  font-family: sans-serif;
}

.forecast-detail-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  background-color: #f0f0f0;
  padding: 1vw 1.5vw;
  border-radius: 0.8vw;
}

.forecast-detail-item img {
  width: 4vw;
  max-width: 5rem; /* 40px -> 2.5rem */
  height: auto;
  border-radius: 0.5vw;
}

.forecast-detail-time {
  font-size: clamp(1rem, 1.8vw, 1.5rem); /* pxをremに */
  font-weight: bold;
}

.forecast-detail-temp {
  font-size: clamp(1.125rem, 2vw, 1.5rem); /* pxをremに */
  font-weight: bold;
  min-width: 1vw;
  text-align: right;
}

/* モーダル表示時のアニメーション */
@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(-3.125rem); /* 50px -> 3.125rem */
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.zukan-container {
  padding: 2vw;
  /* この要素がコンテナであることを宣言 */
  container-type: inline-size;
}

.creature-list {
  display: flex;
  flex-wrap: wrap;
  gap: 2vw;
}

.creature-card {
  flex: 1 1 calc(50% - 2vw);
  background: #f7f7f7;
  border-radius: 0.8vw;
  padding: 1vw;
  box-shadow: 0 0.2vw 0.4vw rgba(0,0,0,0.1);
  text-align: center;
}

/* コンテナクエリによるスタイル変更 */
@container (width < 31.25rem) { /* 500px -> 31.25rem */
    .creature-card {
        flex: 1 1 100%;
    }
}

.creature-img {
  width: 100%;
  height: auto;
  max-height: 15vh;
  object-fit: contain;
}

.creature-info h4 {
  margin: 0.5vw 0 0.25vw;
  font-size: clamp(0.875rem, 1.8vw, 1.125rem); /* pxをremに */
}

.creature-info p {
  font-size: clamp(0.75rem, 1.5vw, 1rem); /* pxをremに */
}